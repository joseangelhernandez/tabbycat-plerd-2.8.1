# Generated by Django 4.1.7 on 2024-05-20 22:14

import checkins.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('participants', '0022_alter_person_code_name_alter_team_emoji'),
        ('draw', '0008_alter_debateteam_side_alter_teamsideallocation_side'),
        ('venues', '0010_populate_tournaments'),
        ('tournaments', '0010_alter_round_draw_type'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(default=checkins.models.generate_identifier, max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', message='The barcode must contain exactly six digits.')], verbose_name='barcode')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='check-in time')),
                ('identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkins.identifier', verbose_name='identifier')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament', verbose_name='tournament')),
            ],
            options={
                'verbose_name': 'check-in event',
                'verbose_name_plural': 'check-in events',
            },
        ),
        migrations.CreateModel(
            name='VenueIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='checkins.identifier')),
                ('venue', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_identifier', to='venues.venue', verbose_name='venue')),
            ],
            options={
                'verbose_name': 'room identifier',
                'verbose_name_plural': 'room identifiers',
            },
            bases=('checkins.identifier',),
        ),
        migrations.CreateModel(
            name='PersonIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='checkins.identifier')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_identifier', to='participants.person', verbose_name='person')),
            ],
            options={
                'verbose_name': 'person identifier',
                'verbose_name_plural': 'person identifiers',
            },
            bases=('checkins.identifier',),
        ),
        migrations.CreateModel(
            name='DebateIdentifier',
            fields=[
                ('identifier_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='checkins.identifier')),
                ('debate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_identifier', to='draw.debate', verbose_name='debate')),
            ],
            options={
                'verbose_name': 'debate identifier',
                'verbose_name_plural': 'debate identifiers',
            },
            bases=('checkins.identifier',),
        ),
    ]
